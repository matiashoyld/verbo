// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String       @id @default(uuid())
    email         String       @unique
    name          String?
    role          UserRole     @default(CANDIDATE)
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    submissions   Submission[]
    challenges    Challenge[]  @relation("CreatedChallenges")
}

enum UserRole {
    RECRUITER
    CANDIDATE
}

model Skill {
    id          String      @id @default(uuid())
    name        String      @unique
    description String?
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    challenges  Challenge[]
}

model Challenge {
    id           String       @id @default(uuid())
    title        String
    description  String
    instructions String
    timeLimit    Int?        // in minutes
    createdBy    User        @relation("CreatedChallenges", fields: [creatorId], references: [id])
    creatorId    String
    skills       Skill[]
    submissions  Submission[]
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt
}

model Submission {
    id           String    @id @default(uuid())
    challenge    Challenge @relation(fields: [challengeId], references: [id])
    challengeId  String
    candidate    User      @relation(fields: [candidateId], references: [id])
    candidateId  String
    audioUrl     String?   // URL to audio recording in Supabase storage
    screenUrl    String?   // URL to screen recording in Supabase storage
    transcript   String?   // Text transcript of the audio
    feedback     Json?     // AI-generated feedback and assessment
    status       SubmissionStatus @default(IN_PROGRESS)
    startedAt    DateTime  @default(now())
    completedAt  DateTime?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

enum SubmissionStatus {
    IN_PROGRESS
    COMPLETED
    FAILED
}
